package com.yzh.ssm.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class MotorHomeExample {
    /**
     * @mbg.generated 2018-11-23 09:33:01
     */
    protected String orderByClause;

    /**
     * @mbg.generated 2018-11-23 09:33:01
     */
    protected boolean distinct;

    /**
     * @mbg.generated 2018-11-23 09:33:01
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table motorhome
     * @mbg.generated 2018-11-23 09:33:00
     */
    public MotorHomeExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table motorhome
     * @mbg.generated 2018-11-23 09:33:01
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table motorhome
     * @mbg.generated 2018-11-23 09:33:01
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table motorhome
     * @mbg.generated 2018-11-23 09:33:01
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table motorhome
     * @mbg.generated 2018-11-23 09:33:01
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table motorhome
     * @mbg.generated 2018-11-23 09:33:01
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table motorhome
     * @mbg.generated 2018-11-23 09:33:01
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table motorhome
     * @mbg.generated 2018-11-23 09:33:01
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table motorhome
     * @mbg.generated 2018-11-23 09:33:01
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table motorhome
     * @mbg.generated 2018-11-23 09:33:01
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table motorhome
     * @mbg.generated 2018-11-23 09:33:01
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table motorhome
     * @mbg.generated 2018-11-23 09:33:01
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("Id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("Id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("Id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("Id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("Id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("Id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("Id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("Id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("Id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("Id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("Id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("Id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andShareuidIsNull() {
            addCriterion("ShareUID is null");
            return (Criteria) this;
        }

        public Criteria andShareuidIsNotNull() {
            addCriterion("ShareUID is not null");
            return (Criteria) this;
        }

        public Criteria andShareuidEqualTo(Integer value) {
            addCriterion("ShareUID =", value, "shareuid");
            return (Criteria) this;
        }

        public Criteria andShareuidNotEqualTo(Integer value) {
            addCriterion("ShareUID <>", value, "shareuid");
            return (Criteria) this;
        }

        public Criteria andShareuidGreaterThan(Integer value) {
            addCriterion("ShareUID >", value, "shareuid");
            return (Criteria) this;
        }

        public Criteria andShareuidGreaterThanOrEqualTo(Integer value) {
            addCriterion("ShareUID >=", value, "shareuid");
            return (Criteria) this;
        }

        public Criteria andShareuidLessThan(Integer value) {
            addCriterion("ShareUID <", value, "shareuid");
            return (Criteria) this;
        }

        public Criteria andShareuidLessThanOrEqualTo(Integer value) {
            addCriterion("ShareUID <=", value, "shareuid");
            return (Criteria) this;
        }

        public Criteria andShareuidIn(List<Integer> values) {
            addCriterion("ShareUID in", values, "shareuid");
            return (Criteria) this;
        }

        public Criteria andShareuidNotIn(List<Integer> values) {
            addCriterion("ShareUID not in", values, "shareuid");
            return (Criteria) this;
        }

        public Criteria andShareuidBetween(Integer value1, Integer value2) {
            addCriterion("ShareUID between", value1, value2, "shareuid");
            return (Criteria) this;
        }

        public Criteria andShareuidNotBetween(Integer value1, Integer value2) {
            addCriterion("ShareUID not between", value1, value2, "shareuid");
            return (Criteria) this;
        }

        public Criteria andReaduidIsNull() {
            addCriterion("ReadUID is null");
            return (Criteria) this;
        }

        public Criteria andReaduidIsNotNull() {
            addCriterion("ReadUID is not null");
            return (Criteria) this;
        }

        public Criteria andReaduidEqualTo(Integer value) {
            addCriterion("ReadUID =", value, "readuid");
            return (Criteria) this;
        }

        public Criteria andReaduidNotEqualTo(Integer value) {
            addCriterion("ReadUID <>", value, "readuid");
            return (Criteria) this;
        }

        public Criteria andReaduidGreaterThan(Integer value) {
            addCriterion("ReadUID >", value, "readuid");
            return (Criteria) this;
        }

        public Criteria andReaduidGreaterThanOrEqualTo(Integer value) {
            addCriterion("ReadUID >=", value, "readuid");
            return (Criteria) this;
        }

        public Criteria andReaduidLessThan(Integer value) {
            addCriterion("ReadUID <", value, "readuid");
            return (Criteria) this;
        }

        public Criteria andReaduidLessThanOrEqualTo(Integer value) {
            addCriterion("ReadUID <=", value, "readuid");
            return (Criteria) this;
        }

        public Criteria andReaduidIn(List<Integer> values) {
            addCriterion("ReadUID in", values, "readuid");
            return (Criteria) this;
        }

        public Criteria andReaduidNotIn(List<Integer> values) {
            addCriterion("ReadUID not in", values, "readuid");
            return (Criteria) this;
        }

        public Criteria andReaduidBetween(Integer value1, Integer value2) {
            addCriterion("ReadUID between", value1, value2, "readuid");
            return (Criteria) this;
        }

        public Criteria andReaduidNotBetween(Integer value1, Integer value2) {
            addCriterion("ReadUID not between", value1, value2, "readuid");
            return (Criteria) this;
        }

        public Criteria andIpIsNull() {
            addCriterion("IP is null");
            return (Criteria) this;
        }

        public Criteria andIpIsNotNull() {
            addCriterion("IP is not null");
            return (Criteria) this;
        }

        public Criteria andIpEqualTo(String value) {
            addCriterion("IP =", value, "ip");
            return (Criteria) this;
        }

        public Criteria andIpNotEqualTo(String value) {
            addCriterion("IP <>", value, "ip");
            return (Criteria) this;
        }

        public Criteria andIpGreaterThan(String value) {
            addCriterion("IP >", value, "ip");
            return (Criteria) this;
        }

        public Criteria andIpGreaterThanOrEqualTo(String value) {
            addCriterion("IP >=", value, "ip");
            return (Criteria) this;
        }

        public Criteria andIpLessThan(String value) {
            addCriterion("IP <", value, "ip");
            return (Criteria) this;
        }

        public Criteria andIpLessThanOrEqualTo(String value) {
            addCriterion("IP <=", value, "ip");
            return (Criteria) this;
        }

        public Criteria andIpLike(String value) {
            addCriterion("IP like", value, "ip");
            return (Criteria) this;
        }

        public Criteria andIpNotLike(String value) {
            addCriterion("IP not like", value, "ip");
            return (Criteria) this;
        }

        public Criteria andIpIn(List<String> values) {
            addCriterion("IP in", values, "ip");
            return (Criteria) this;
        }

        public Criteria andIpNotIn(List<String> values) {
            addCriterion("IP not in", values, "ip");
            return (Criteria) this;
        }

        public Criteria andIpBetween(String value1, String value2) {
            addCriterion("IP between", value1, value2, "ip");
            return (Criteria) this;
        }

        public Criteria andIpNotBetween(String value1, String value2) {
            addCriterion("IP not between", value1, value2, "ip");
            return (Criteria) this;
        }

        public Criteria andReaddateIsNull() {
            addCriterion("ReadDate is null");
            return (Criteria) this;
        }

        public Criteria andReaddateIsNotNull() {
            addCriterion("ReadDate is not null");
            return (Criteria) this;
        }

        public Criteria andReaddateEqualTo(Date value) {
            addCriterion("ReadDate =", value, "readdate");
            return (Criteria) this;
        }

        public Criteria andReaddateNotEqualTo(Date value) {
            addCriterion("ReadDate <>", value, "readdate");
            return (Criteria) this;
        }

        public Criteria andReaddateGreaterThan(Date value) {
            addCriterion("ReadDate >", value, "readdate");
            return (Criteria) this;
        }

        public Criteria andReaddateGreaterThanOrEqualTo(Date value) {
            addCriterion("ReadDate >=", value, "readdate");
            return (Criteria) this;
        }

        public Criteria andReaddateLessThan(Date value) {
            addCriterion("ReadDate <", value, "readdate");
            return (Criteria) this;
        }

        public Criteria andReaddateLessThanOrEqualTo(Date value) {
            addCriterion("ReadDate <=", value, "readdate");
            return (Criteria) this;
        }

        public Criteria andReaddateIn(List<Date> values) {
            addCriterion("ReadDate in", values, "readdate");
            return (Criteria) this;
        }

        public Criteria andReaddateNotIn(List<Date> values) {
            addCriterion("ReadDate not in", values, "readdate");
            return (Criteria) this;
        }

        public Criteria andReaddateBetween(Date value1, Date value2) {
            addCriterion("ReadDate between", value1, value2, "readdate");
            return (Criteria) this;
        }

        public Criteria andReaddateNotBetween(Date value1, Date value2) {
            addCriterion("ReadDate not between", value1, value2, "readdate");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table motorhome
     * @mbg.generated do_not_delete_during_merge 2018-11-23 09:33:01
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table motorhome
     * @mbg.generated 2018-11-23 09:33:01
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}